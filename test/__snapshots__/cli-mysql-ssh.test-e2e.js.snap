// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CLI test: mysql2+ssh can create conn aliases 1`] = `
"alias  conn
alias1 mysql://app:secret@127.0.0.1:1234/dbname
alias2 sqlite3:///path/to/file.db
"
`;

exports[`CLI test: mysql2+ssh can delete conn aliases 1`] = `
"alias  conn
alias2 sqlite3:///path/to/file.db
"
`;

exports[`CLI test: mysql2+ssh can diff schemas 1`] = `
"No tables with changes: 3x similar (hidden)
"
`;

exports[`CLI test: mysql2+ssh can diff tables 1`] = `
"column  type
field_1 int nullable → decimal

index                  algorithm unique columns
table_1_field_1_index  BTREE     false  field_1
table_2_field_1_unique BTREE     true   field_1

Columns: 1x changed, 4x similar (hidden)
Indexes: 1x deleted, 1x created, 1x similar (hidden)
"
`;

exports[`CLI test: mysql2+ssh can diff tables data 1`] = `
"Diff of tables content (first 20 rows):

id field_1    updated_at
1  12 → 12.30 [null] → 2020-07-24T18:34:00.000Z
2  30 → 30.45 2020-07-24T18:34:00.000Z → 2020-07-24T19:25:00.000Z
"
`;

exports[`CLI test: mysql2+ssh can list tables 1`] = `
"table   rows bytes
table_1 2    32.8 kB
table_2 2    32.8 kB
table_3 0    16.4 kB

(81.9 kB in 3 tables)
"
`;

exports[`CLI test: mysql2+ssh can load database dump 1`] = `
"column     type        nullable
id         int         false
field_1    int         true
field_2    text(65535) true
created_at timestamp   true
updated_at timestamp   true

index                 algorithm unique columns
PRIMARY               BTREE     true   id
table_1_field_1_index BTREE     false  field_1
"
`;

exports[`CLI test: mysql2+ssh can load database dump 2`] = `
"column     type        nullable
id         int         false
field_1    decimal     false
field_2    text(65535) true
created_at timestamp   true
updated_at timestamp   true

index                  algorithm unique columns
PRIMARY                BTREE     true   id
table_2_field_1_unique BTREE     true   field_1
"
`;

exports[`CLI test: mysql2+ssh can load database dump 3`] = `
"column     type      nullable
id_field   bigint    false
field_1    bigint    true
created_at timestamp true
updated_at timestamp true

index   algorithm unique columns
PRIMARY BTREE     true   id_field
"
`;

exports[`CLI test: mysql2+ssh can show table 1`] = `
"column     type        nullable
id         int         false
field_1    decimal     false
field_2    text(65535) true
created_at datetime    true
updated_at datetime    true

index                  algorithm unique columns
PRIMARY                BTREE     true   id
table_2_field_1_unique BTREE     true   field_1
"
`;

exports[`CLI test: mysql2+ssh can use a created alias 1`] = `
"table   rows bytes
table_1 2    32.8 kB
table_2 2    32.8 kB
table_3 0    16.4 kB

(81.9 kB in 3 tables)
"
`;

exports[`CLI test: mysql2+ssh database dump contents are valid 1`] = `
"module.exports.up = async (knex) => {
  await knex.schema.createTable(\\"table_1\\", (t) => {
    t.increments(\\"id\\");
    t.integer(\\"field_1\\");
    t.text(\\"field_2\\");
    t.timestamp(\\"created_at\\");
    t.timestamp(\\"updated_at\\");
    t.index([\\"field_1\\"], \\"table_1_field_1_index\\");
  });
};
module.exports.down = async (knex) => {
  await knex.schema.dropTableIfExists(\\"table_1\\");
};
"
`;

exports[`CLI test: mysql2+ssh database dump contents are valid 2`] = `
"module.exports.up = async (knex) => {
  await knex.schema.createTable(\\"table_2\\", (t) => {
    t.increments(\\"id\\");
    t.decimal(\\"field_1\\").notNullable();
    t.text(\\"field_2\\");
    t.timestamp(\\"created_at\\");
    t.timestamp(\\"updated_at\\");
    t.unique([\\"field_1\\"], \\"table_2_field_1_unique\\");
  });
};
module.exports.down = async (knex) => {
  await knex.schema.dropTableIfExists(\\"table_2\\");
};
"
`;

exports[`CLI test: mysql2+ssh database dump contents are valid 3`] = `
"module.exports.up = async (knex) => {
  await knex.schema.createTable(\\"table_3\\", (t) => {
    t.bigIncrements(\\"id_field\\");
    t.bigInteger(\\"field_1\\");
    t.timestamp(\\"created_at\\");
    t.timestamp(\\"updated_at\\");
  });
};
module.exports.down = async (knex) => {
  await knex.schema.dropTableIfExists(\\"table_3\\");
};
"
`;

exports[`CLI test: mysql2+ssh database dump contents are valid 4`] = `
"{\\"id\\":1,\\"field_1\\":12,\\"field_2\\":\\"foo\\",\\"created_at\\":\\"2020-07-24T18:34:00.000Z\\"}
{\\"id\\":2,\\"field_1\\":30,\\"field_2\\":\\"bar\\",\\"created_at\\":\\"2020-07-24T18:34:00.000Z\\",\\"updated_at\\":\\"2020-07-24T18:34:00.000Z\\"}
"
`;

exports[`CLI test: mysql2+ssh database dump contents are valid 5`] = `
"{\\"id\\":1,\\"field_1\\":\\"12.30\\",\\"field_2\\":\\"foo\\",\\"created_at\\":\\"2020-07-24T18:34:00.000Z\\",\\"updated_at\\":\\"2020-07-24T18:34:00.000Z\\"}
{\\"id\\":2,\\"field_1\\":\\"30.45\\",\\"field_2\\":\\"bar\\",\\"created_at\\":\\"2020-07-24T18:34:00.000Z\\",\\"updated_at\\":\\"2020-07-24T19:25:00.000Z\\"}
"
`;
