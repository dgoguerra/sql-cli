// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CLI test: sqlite3 can connect with an alias 1`] = `
"table   rows bytes
table_1 2    4.1 kB
table_2 2    4.1 kB
table_3 0    4.1 kB

(12.3 kB in 3 tables)
"
`;

exports[`CLI test: sqlite3 can diff tables 1`] = `
"column  type               nullable     default
field_1 integer → float    true → false
field_2 varchar(50) → text true         [null] → default text

index                  algorithm unique columns
table_1_field_1_index  unknown   false  field_1
table_2_field_1_unique unknown   true   field_1

Columns: 2x changed, 3x similar (hidden)
Indexes: 1x deleted, 1x created
Re-run with --all to show hidden rows
"
`;

exports[`CLI test: sqlite3 can diff tables data 1`] = `
"Diff of tables content (rows 1 to 20):

id field_1    updated_at
1  12 → 12.3  [null] → 2020-07-24 18:34:00
2  30 → 30.45 2020-07-24 18:34:00 → 2020-07-24 19:25:00

Rows: 2x changed
"
`;

exports[`CLI test: sqlite3 can list tables 1`] = `
"table   rows bytes
table_1 2    4.1 kB
table_2 2    4.1 kB
table_3 0    4.1 kB

(12.3 kB in 3 tables)
"
`;

exports[`CLI test: sqlite3 can load dump to database 1`] = `
"column     type        nullable default
id         integer     false
field_1    integer     true
field_2    varchar(50) true
created_at datetime    true
updated_at datetime    true

index                 algorithm unique columns
table_1_field_1_index unknown   false  field_1
"
`;

exports[`CLI test: sqlite3 can load dump to database 2`] = `
"column     type     nullable default
id         integer  false
field_1    float    false
field_2    text     true     default text
created_at datetime true
updated_at datetime true

index                  algorithm unique columns
table_2_field_1_unique unknown   true   field_1
"
`;

exports[`CLI test: sqlite3 can load dump to database 3`] = `
"column     type     nullable default
id_field   integer  false
field_1    bigint   true
created_at datetime true
updated_at datetime true

There are no indexes in the table
"
`;

exports[`CLI test: sqlite3 can see dumpfile contents 1`] = `
"table                         rows bytes
migrations_dump_sqlite_3      3    4.1 kB
migrations_dump_sqlite_3_lock 1    4.1 kB
table_1                       2    4.1 kB
table_2                       2    4.1 kB
table_3                       0    4.1 kB

(20.5 kB in 5 tables)
"
`;

exports[`CLI test: sqlite3 can see dumpfile contents 2`] = `
"column     type        nullable default
id         integer     false
field_1    integer     true
field_2    varchar(50) true
created_at datetime    true
updated_at datetime    true

index                 algorithm unique columns
table_1_field_1_index unknown   false  field_1
"
`;

exports[`CLI test: sqlite3 can show table 1`] = `
"column     type     nullable default
id         integer  false
field_1    float    false
field_2    text     true     default text
created_at datetime true
updated_at datetime true

index                  algorithm unique columns
table_2_field_1_unique unknown   true   field_1
"
`;

exports[`CLI test: sqlite3 database dump contents are valid 1`] = `
"module.exports.up = async (knex) => {
  await knex.schema.createTable(\\"table_1\\", (t) => {
    t.increments(\\"id\\");
    t.integer(\\"field_1\\");
    t.string(\\"field_2\\", 50);
    t.datetime(\\"created_at\\");
    t.datetime(\\"updated_at\\");
    t.index([\\"field_1\\"], \\"table_1_field_1_index\\");
  });
};
module.exports.down = async (knex) => {
  await knex.schema.dropTableIfExists(\\"table_1\\");
};
"
`;

exports[`CLI test: sqlite3 database dump contents are valid 2`] = `
"module.exports.up = async (knex) => {
  await knex.schema.createTable(\\"table_2\\", (t) => {
    t.increments(\\"id\\");
    t.float(\\"field_1\\").notNullable();
    t.text(\\"field_2\\").defaultTo(\\"default text\\");
    t.datetime(\\"created_at\\");
    t.datetime(\\"updated_at\\");
    t.unique([\\"field_1\\"], \\"table_2_field_1_unique\\");
  });
};
module.exports.down = async (knex) => {
  await knex.schema.dropTableIfExists(\\"table_2\\");
};
"
`;

exports[`CLI test: sqlite3 database dump contents are valid 3`] = `
"module.exports.up = async (knex) => {
  await knex.schema.createTable(\\"table_3\\", (t) => {
    t.increments(\\"id_field\\");
    t.bigInteger(\\"field_1\\");
    t.datetime(\\"created_at\\");
    t.datetime(\\"updated_at\\");
  });
};
module.exports.down = async (knex) => {
  await knex.schema.dropTableIfExists(\\"table_3\\");
};
"
`;

exports[`CLI test: sqlite3 database dump contents are valid 4`] = `
"{\\"id\\":1,\\"field_1\\":12,\\"field_2\\":\\"foo\\",\\"created_at\\":\\"2020-07-24 18:34:00\\"}
{\\"id\\":2,\\"field_1\\":30,\\"field_2\\":\\"bar\\",\\"created_at\\":\\"2020-07-24 18:34:00\\",\\"updated_at\\":\\"2020-07-24 18:34:00\\"}
"
`;

exports[`CLI test: sqlite3 database dump contents are valid 5`] = `
"{\\"id\\":1,\\"field_1\\":12.3,\\"field_2\\":\\"foo\\",\\"created_at\\":\\"2020-07-24 18:34:00\\",\\"updated_at\\":\\"2020-07-24 18:34:00\\"}
{\\"id\\":2,\\"field_1\\":30.45,\\"field_2\\":\\"bar\\",\\"created_at\\":\\"2020-07-24 18:34:00\\",\\"updated_at\\":\\"2020-07-24 19:25:00\\"}
"
`;
